name: "Tracker"

input: "image"
input_shape { dim: 1 dim: 3 dim: 100 dim: 100}

input: "cont"
input_shape { dim: 1 dim: 1}

input: "mask_size"
input_shape { dim: 1 dim: 1 dim: 2 }

input: "spixel_data"
input_shape { dim: 1 dim: 1 dim: 100 dim: 2 }

input: "spixel_ptr"
input_shape { dim: 1 dim: 1 dim: 50 }

input: "spixel_num"
input_shape { dim: 1 dim: 1 }

input: "seg_data"
input_shape { dim: 1 dim: 1 dim: 100 }

input: "seg_ptr"
input_shape { dim: 1 dim: 1 dim: 50 }

input: "seg_num"
input_shape { dim: 1 dim: 1 }

input: "seg_coef"
input_shape { dim: 1 dim: 1 dim: 100 }

input: "overlaps"
input_shape { dim: 1 dim: 1 dim: 49 dim: 49}
  
# AlexNet data layers
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "image"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
  
# feature pooling data layers
layer {
  name: "spixel_pooling1"
  type: "SuperpixelPooling"
  bottom: "pool5"
  bottom: "spixel_data"
  bottom: "spixel_ptr"
  bottom: "spixel_num"
  bottom: "mask_size"
  top: "spixel_feature"
}

layer {
  name: "rpixel_pooling1"
  type: "RowPooling"
  bottom: "spixel_feature"
  bottom: "seg_data"
  bottom: "seg_ptr"
  bottom: "seg_num"
  bottom: "seg_coef"
  top: "seg_feature"
}

# tracker data layer
layer {
  name: "tracker"
  type: "Tracker"
  bottom: "seg_feature"
  bottom: "overlaps"
  bottom: "seg_num"
  bottom: "cont"
  top: "v"
  top: "vtilde"
  tracker_param {
    num_track: 10
    feature_dim: 256 
    lambda: .5
    use_softmax: false
    use_vtilde_in_c: false
  }
}


